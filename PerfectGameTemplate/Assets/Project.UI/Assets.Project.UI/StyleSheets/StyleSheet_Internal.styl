// add-skin
add-skin(view, alpha = 1, alpha2 = (alpha+3)/4)
    if view != null
        view      = views[get-string(view)] or error('Views has no view: ' + get-string(view))
        //
        color     = view.foreground['color']
        font      = view.foreground['font' ]
        text      = view.foreground['text' ]
        //
        bg-color  = view.background['color']
        bg-color  = alpha(bg-color, alpha(bg-color) * alpha) if bg-color != null
        bg-image  = view.background['image']
        //
        bd-color  = view.border['color' ]
        bd-color  = alpha(bd-color, alpha(bd-color) * alpha2) if bd-color != null
        bd-radius = view.border['radius']
        //
        add-view-foreground color, font, text
        add-view-background bg-color, bg-image
        add-view-border     bd-color, bd-radius
// add-skin2
add-skin2(layout)
    if layout != null
        layout  = layouts[get-string(layout)] or error('Layouts has no layout: ' + get-string(layout))
        //
        pos     = layout.position['position']
        left    = layout.position['left'    ]
        right   = layout.position['right'   ]
        top     = layout.position['top'     ]
        bottom  = layout.position['bottom'  ]
        //
        width   = layout.size['width' ]
        height  = layout.size['height']
        //
        margin  = layout.box['margin' ]
        border  = layout.box['border' ]
        padding = layout.box['padding']
        //
        add-layout-position pos, left, right, top, bottom
        add-layout-size     width, height
        add-layout-box      margin, border, padding

// add-view
add-view(color = null, font = null, text = null, bg-color = null, bg-image = null, bd-color = null, bd-radius = null)
    add-view-foreground color, font, text
    add-view-background bg-color, bg-image
    add-view-border     bd-color, bd-radius
add-view-foreground(color, font, text)
    add-property 'color',           color
    add-property 'font',            font.url     if font != null
    add-property 'font-definition', font.url     if font != null
    add-property 'font-size',       font.size    if font != null
    add-property 'font-style',      font.style   if font != null
    add-property 'text-align',      text.align   if text != null
    add-property 'text-outline',    text.outline if text != null
    add-property 'text-shadow',     text.shadow  if text != null
add-view-background(background-color, background-image)
    add-property 'background-color',            background-color
    add-property 'background-image',            background-image.url          if background-image != null
    add-property 'background-image-tint-color', background-image.color        if background-image != null
    add-property 'background-scale-mode',       background-image.scale-mode   if background-image != null
    add-property 'slice-left',                  background-image.slice-left   if background-image != null
    add-property 'slice-right',                 background-image.slice-right  if background-image != null
    add-property 'slice-top',                   background-image.slice-top    if background-image != null
    add-property 'slice-bottom',                background-image.slice-bottom if background-image != null
    add-property 'slice-scale',                 background-image.slice-scale  if background-image != null
add-view-border(border-color, border-radius)
    add-property 'border-left-color',          border-color[0]                   
    add-property 'border-right-color',         border-color[1] or border-color[0]
    add-property 'border-top-color',           border-color[2] or border-color[0]
    add-property 'border-bottom-color',        border-color[3] or border-color[0]
    add-property 'border-top-left-radius',     border-radius[0]                    
    add-property 'border-top-right-radius',    border-radius[1] or border-radius[0]
    add-property 'border-bottom-left-radius',  border-radius[2] or border-radius[0]
    add-property 'border-bottom-right-radius', border-radius[3] or border-radius[0]

// add-layout
add-layout(position = null, width = null, height = null, margin = null, border = null, padding = null)
    add-layout-position position[0], position[1], position[2], position[3], position[4]
    add-layout-size     width, height
    add-layout-box      margin, border, padding
add-layout-position(position, left = null, right = null, top = null, bottom = null)
    add-property 'position', position
    add-property 'left',     left
    add-property 'right',    right
    add-property 'top',      top
    add-property 'bottom',   bottom
add-layout-size(width, height)
    add-property 'width',      width[0]
    add-property 'min-width',  width[1]
    add-property 'max-width',  width[2]
    add-property 'height',     height[0]
    add-property 'min-height', height[1]
    add-property 'max-height', height[2]
add-layout-box(margin, border, padding)
    add-property 'margin-left',         margin[0]
    add-property 'margin-right',        margin[1] or margin[0]
    add-property 'margin-top',          margin[2] or margin[0]
    add-property 'margin-bottom',       margin[3] or margin[0]
    add-property 'border-left-width',   border[0]
    add-property 'border-right-width',  border[1] or border[0]
    add-property 'border-top-width',    border[2] or border[0]
    add-property 'border-bottom-width', border[3] or border[0]
    add-property 'padding-left',        padding[0]
    add-property 'padding-right',       padding[1] or padding[0]
    add-property 'padding-top',         padding[2] or padding[0]
    add-property 'padding-bottom',      padding[3] or padding[0]

// add-flex
add-flex(flex-grow, flex-shrink, flex-basis, align-self)
    add-property 'flex-grow',   flex-grow
    add-property 'flex-shrink', flex-shrink
    add-property 'flex-basis',  flex-basis
    add-property 'align-self',  align-self
add-flex2(flex-direction, justify-content, align-items)
    add-property 'flex-direction',  flex-direction
    add-property 'flex-wrap',       null
    add-property 'justify-content', justify-content
    add-property 'align-items',     align-items
    add-property 'align-content',   null

// add-property
add-property(property, value)
    property = get-unity-property(property) if property == 'overflow-clip-box'
    property = get-unity-property(property) if property == 'font'
    property = get-unity-property(property) if property == 'font-definition'
    property = get-unity-property(property) if property == 'font-style'
    property = get-unity-property(property) if property == 'text-align'
    property = get-unity-property(property) if property == 'text-outline'
    property = get-unity-property(property) if property == 'text-outline-width'
    property = get-unity-property(property) if property == 'text-outline-color'
    property = get-unity-property(property) if property == 'text-overflow-position'
    property = get-unity-property(property) if property == 'paragraph-spacing'
    property = get-unity-property(property) if property == 'background-image-tint-color'
    property = get-unity-property(property) if property == 'background-scale-mode'
    property = get-unity-property(property) if property == 'slice-left'
    property = get-unity-property(property) if property == 'slice-right'
    property = get-unity-property(property) if property == 'slice-top'
    property = get-unity-property(property) if property == 'slice-bottom'
    property = get-unity-property(property) if property == 'slice-scale'
    value = get-url-value(value) if property == '-unity-font'
    value = get-url-value(value) if property == '-unity-font-definition'
    value = get-url-value(value) if property == 'background-image'
    if value != null
        {property} value
get-unity-property(property)
    if property != null
        property = get-string(property)
        return s("-unity-%s", property)
    null
get-url-value(url)
    // todo: does this support addressables?
    if url != null
        url = get-string(url)
        return s("url('%s')", url)
    null
