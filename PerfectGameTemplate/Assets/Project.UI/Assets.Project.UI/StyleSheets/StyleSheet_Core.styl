@import "StyleSheet_Internal"
@import "StyleSheet_Internal2"

theme = {
    color: {
        none:                          hsla(  0deg,   0%,   0%, 0.00),
        light:                         hsla(  0deg,   0%,  90%, 1.00),
        dark:                          hsla(  0deg,   0%,  10%, 1.00),
        hover-effect:                  hsla( 40deg,  60%,  40%, 1.00),
        focus-effect:                  hsla(200deg,  80%,  40%, 1.00),
        invalid-effect:                hsla( 10deg,  80%,  40%, 1.00),
    },
    background-color: {
        none:                          hsla(  0deg,   0%,   0%, 0.00),
        // element
        light-element:                 hsla( 30deg,  30%,  90%, 0.50),
        dark-element:                  hsla(200deg,  30%,  10%, 0.50),
        // view
        light-view:                    hsla( 30deg,   5%,  90%, 0.20),
        dark-view:                     hsla(200deg,   5%,  10%, 0.80),
        // component
        light-component:               hsla( 30deg,  30%,  90%, 0.80),
        dark-component:                hsla(200deg,  30%,  10%, 0.80),
    },
    background-image-color: {
        none:                          hsla(  0deg,   0%,   0%, 0.00),
        light:                         hsla( 30deg,  30%,  90%, 1.00),
        dark:                          hsla(200deg,  30%,  10%, 1.00),
    },
    border-color: {
        none:                          hsla(  0deg,   0%,   0%, 0.00),
        // element
        light-element:                 hsla( 45deg, 100%,  15%, 1.00),
        dark-element:                  hsla( 45deg, 100%,  30%, 1.00),
        // view
        light-view:                    hsla( 45deg, 100%,  30%, 1.00),
        dark-view:                     hsla( 45deg, 100%,  30%, 1.00),
        // component
        light-component:               hsla( 45deg, 100%,  30%, 1.00),
        dark-component:                hsla( 45deg, 100%,  30%, 1.00),
    },
    border-radius: {
        none:                          0px,
        element:                       4px,
        view:                          4px,
        component:                     4px,
        box-component:                 2px,
        image-component:               2px
    }
}
view-skins = {
    // element
    label:                             create-view-skin(null,           none,                null,        none,            element        ),
    button:                            create-view-skin(dark,           light-element,       null,        light-element,   element        ),
    field:                             create-view-skin(null,           none,                null,        none,            element        ),
    field-label:                       create-view-skin(dark,           light-element,       null,        light-element,   element        ),
    field-input:                       create-view-skin(light,          dark-element,        null,        dark-element,    element        ),
    // view
    scroll-view:                       create-view-skin(null,           none,                null,        none,            view           ),
    light-scroll-view:                 create-view-skin(dark,           light-view,          null,        light-view,      view           ),
    dark-scroll-view:                  create-view-skin(light,          dark-view,           null,        dark-view,       view           ),
    // view
    dropdown-view:                     create-view-skin(light,          dark-view,           null,        dark-view,       view           ),
    // component
    component:                         create-view-skin(null,           none,                null,        none,            component      ),
    // component
    box-component:                     create-view-skin(null,           none,                null,        none,            box-component  ),
    light-box-component:               create-view-skin(null,           light-component,     null,        light-component, box-component  ),
    dark-box-component:                create-view-skin(null,           dark-component,      null,        dark-component,  box-component  ),
    // component
    image-component:                   create-view-skin(null,           none,                light,       none,            image-component),
    light-image-component:             create-view-skin(null,           light-component,     dark,        light-component, image-component),
    dark-image-component:              create-view-skin(null,           dark-component,      light,       dark-component,  image-component),
    // effect
    hover-effect:                      create-view-skin(null,           hover-effect,        null,        null,            null           ),
    focus-effect:                      create-view-skin(focus-effect,   null,                null,        focus-effect,    null           ),
    focus-effect-without-foreground:   create-view-skin(null,           null,                null,        focus-effect,    null           ),
    invalid-effect:                    create-view-skin(invalid-effect, null,                null,        invalid-effect,  null           ),
    invalid-effect-without-foreground: create-view-skin(null,           null,                null,        invalid-effect,  null           )
}
layout-skins = {
    // element
    label:                             create-layout-skin(null, auto, auto, (4px            ), (1px            ), (12px 12px 10px 10px)   ),
    button:                            create-layout-skin(null, auto, auto, (4px            ), (1px            ), (12px 12px 10px 10px)   ),
    field:                             create-layout-skin(null, auto, auto, (4px            ), (0px            ), (0px                )   ),
    field-label:                       create-layout-skin(null, auto, auto, (0px 1px 0px 0px), (1px            ), (12px 12px 10px 10px)   ),
    field-input:                       create-layout-skin(null, auto, auto, (1px 0px 0px 0px), (1px            ), (12px 12px 10px 10px)   ),
    // view
    scroll-view:                       create-layout-skin(null, auto, auto, (4px            ), (1px            ), (0px                )   ),
    // view
    dropdown-view:                     create-layout-skin(null, auto, auto, (0px            ), (1px            ), (0px                )   ),
    // component
    component:                         create-layout-skin(null, auto, auto, (0px            ), (0px            ), (0px                )   ),
    box-component:                     create-layout-skin(null, auto, auto, (0px            ), (1px            ), (0px                )   ),
    image-component:                   create-layout-skin(null, auto, auto, (0px            ), (1px            ), (0px                )   ),
}

// label
label()
    skin(label, fnt(), txt(upper-left))
    skin2(label)
    flex(0, 1, auto, auto)

// button
button()
    skin(button, fnt(null, null, bold), txt(middle-center))
    skin2(button)
    flex(0, 1, auto, auto)

// field
field()
    skin(field)
    skin2(field)
    flex(0, 1, auto, auto)
    flex2(row, flex-start, stretch)
field-label()
    skin(field-label, fnt(null, null, bold), txt(middle-left))
    skin2(field-label)
    flex(0, 1, auto, auto)
field-input()
    skin(field-input, fnt(), txt(middle-left))
    skin2(field-input)
    flex(1, 1, auto, auto)
    flex2(row, flex-end, center)

// text-field
text-field-input()
text-field-input--text()
    skin(component)
    skin2(component)
    flex(1, 1, auto, auto)

// popup-field
popup-field-input()
popup-field-input--text()
    skin(component)
    skin2(component)
    flex(1, 1, auto, auto)
popup-field-input--arrow()
    skin(image-component, null, null, img('project://database/Assets/Project.UI/Assets.Project.UI/Images/DropdownArrow.png'))
    skin2(image-component, null, 12px, 12px, 2px)

// slider-field
slider-field-input()
slider-field-input--container()
    skin(component)
    skin2(component)
    flex(1, 1, auto, auto)
    flex2(row, flex-start, center)
slider-field-input--tracker()
    skin(light-box-component, alpha: 0.50)
    skin2(box-component, null, auto, 8px)
    flex(1, 1, auto, auto)
slider-field-input--dragger()
    skin(light-box-component)
    skin2(box-component, absolute, 8px, 24px)
    flex(0, 1, auto, auto)

// toggle-field
toggle-field-input()
toggle-field-input--checkmark(value)
    skin(light-image-component, null, null, img(value ? 'project://database/Assets/Project.UI/Assets.Project.UI/Images/Check.png' : null))
    skin2(image-component, null, 16px, 16px)

// scroll-view
scroll-view()
    skin(scroll-view)
    skin2(scroll-view)
    flex(0, 1, auto, auto)
    flex2(column, flex-start, stretch)
    &.light
        skin(light-scroll-view, alpha: 0.00)
    &.light1
        skin(light-scroll-view, alpha: 0.10)
    &.light2
        skin(light-scroll-view, alpha: 0.20)
    &.light3
        skin(light-scroll-view, alpha: 0.30)
    &.light4
        skin(light-scroll-view, alpha: 0.40)
    &.light5
        skin(light-scroll-view, alpha: 0.50)
    &.light6
        skin(light-scroll-view, alpha: 0.60)
    &.light7
        skin(light-scroll-view, alpha: 0.70)
    &.light8
        skin(light-scroll-view, alpha: 0.80)
    &.light9
        skin(light-scroll-view, alpha: 0.90)
    &.light10
        skin(light-scroll-view, alpha: 1.00)
    &.dark
        skin(dark-scroll-view, alpha: 0.00)
    &.dark1
        skin(dark-scroll-view, alpha: 0.10)
    &.dark2
        skin(dark-scroll-view, alpha: 0.20)
    &.dark3
        skin(dark-scroll-view, alpha: 0.30)
    &.dark4
        skin(dark-scroll-view, alpha: 0.40)
    &.dark5
        skin(dark-scroll-view, alpha: 0.50)
    &.dark6
        skin(dark-scroll-view, alpha: 0.60)
    &.dark7
        skin(dark-scroll-view, alpha: 0.70)
    &.dark8
        skin(dark-scroll-view, alpha: 0.80)
    &.dark9
        skin(dark-scroll-view, alpha: 0.90)
    &.dark10
        skin(dark-scroll-view, alpha: 1.00)
scroll-view--container()
    skin(component)
    skin2(component)
    flex(1, 1, auto, auto)
    flex2(row, flex-start, stretch)
scroll-view--viewport()
    overflow hidden
    skin(component)
    skin2(component)
    flex(1, 1, auto, auto)
    flex2(column, flex-start, stretch)
scroll-view--content()
    overflow scroll
    skin(component)
    skin2(component, null, null, null, null, null, (12px 12px 10px 10px))
    flex(0, 0, auto, auto)
    flex2(column, flex-start, stretch)

// horizontal-scroller
horizontal-scroller()
    skin(component)
    skin2(component)
    flex(0, 0, auto, auto)
    flex2(row, flex-start, stretch)
horizontal-scroller--low-button()
    skin(light-image-component, null, null, img('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Left.png'), alpha: 0.50)
    skin2(image-component, (absolute 0px auto auto auto), 24px, 24px)
horizontal-scroller--high-button()
    skin(light-image-component, null, null, img('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Right.png'), alpha: 0.50)
    skin2(image-component, (absolute auto 0px auto auto), 24px, 24px)
horizontal-scroller--slider-field()
    skin(component)
    skin2(component, null, auto, auto, 0px, 0px, 0px)
    flex(1, 1, auto, auto)
    flex2(row, flex-start, center)
horizontal-scroller--slider-field-input()
    skin(component)
    skin2(component, null, auto, 24px, (24px 24px 0px 0px), 0px, 0px)
    flex(1, 1, auto, auto)
    flex2(row, flex-start, center)
horizontal-scroller--slider-field-input--container()
    skin(component)
    skin2(component)
    flex(1, 1, auto, auto)
    flex2(row, flex-start, center)
horizontal-scroller--slider-field-input--tracker()
    skin(dark-box-component)
    skin2(box-component, null, auto, 24px)
    flex(1, 1, auto, auto)
horizontal-scroller--slider-field-input--dragger()
    skin(light-box-component, alpha: 0.50)
    skin2(box-component, absolute, auto, 24px)
    flex(0, 1, auto, auto)

// vertical-scroller
vertical-scroller()
    skin(component)
    skin2(component)
    flex(0, 0, auto, auto)
    flex2(column, flex-start, stretch)
vertical-scroller--low-button()
    skin(light-image-component, null, null, img('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Up.png'), alpha: 0.50)
    skin2(image-component, (absolute auto auto 0px auto), 24px, 24px)
vertical-scroller--high-button()
    skin(light-image-component, null, null, img('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Down.png'), alpha: 0.50)
    skin2(image-component, (absolute auto auto auto 0px), 24px, 24px)
vertical-scroller--slider-field()
    skin(component)
    skin2(component, null, auto, auto, 0px, 0px, 0px)
    flex(1, 1, auto, auto)
    flex2(column, flex-start, center)
vertical-scroller--slider-field-input()
    skin(component)
    skin2(component, null, 24px, auto, (0px 0px 24px 24px), 0px, 0px)
    flex(1, 1, auto, auto)
    flex2(column, flex-start, center)
vertical-scroller--slider-field-input--container()
    skin(component)
    skin2(component)
    flex(1, 1, auto, auto)
    flex2(column, flex-start, center)
vertical-scroller--slider-field-input--tracker()
    skin(dark-box-component)
    skin2(box-component, null, 24px, auto)
    flex(1, 1, auto, auto)
vertical-scroller--slider-field-input--dragger()
    skin(light-box-component, alpha: 0.50)
    skin2(box-component, absolute, 24px, auto)
    flex(0, 1, auto, auto)

// dropdown-view
dropdown-view()
    skin(null)
    skin2(null)
    flex(0, 1, auto, auto)
    flex2(column, flex-start, stretch)
dropdown-view--scroll-view()
    skin(dropdown-view)
    skin2(dropdown-view)
dropdown-view--scroll-view--container()
dropdown-view--scroll-view--viewport()
dropdown-view--scroll-view--content()
    layout-box(0px, 0px, 0px)
dropdown-view--scroll-view--item()
    skin(component)
    skin2(component, null, null, null, null, null, (12px 12px 10px 10px))
    flex(0, 1, auto, auto)
    flex2(row, flex-start, center)
dropdown-view--scroll-view--item-checkmark(value)
    skin(image-component, null, null, img(value ? 'project://database/Assets/Project.UI/Assets.Project.UI/Images/Check.png' : null))
    skin2(image-component, null, 16px, 16px, (0px 12px 0px 0px))
    flex(0, 1, auto, auto)
dropdown-view--scroll-view--item-text()
    skin(component)
    skin2(component)
    flex(1, 1, auto, auto)

// PanelSettings
#PanelSettings
    view-foreground(theme.color.dark, fnt('project://database/Assets/Project.UI/Assets.Project.UI/Fonts/NotInter/NotInter-Regular.ttf', 14px, normal), null, null)

// ui-document
.unity-ui-document__root
    layout-size(100%, 100%)

// label
.unity-label
    label()
    &:focus
        effect(focus-effect)
    &.invalid
        effect(invalid-effect)

// button
.unity-button
    button()
    &:focus
        effect(focus-effect)
    &.invalid
        effect(invalid-effect)

// repeat-button
.unity-repeat-button
    button()
    &:focus
        effect(focus-effect)
    &.invalid
        effect(invalid-effect)

// field
.unity-base-field
    field()
    &__label
        field-label()
        :focus > &
            effect(focus-effect)
        .invalid > &
            effect(invalid-effect)
    &__input
        field-input()
        :focus > &
            effect(focus-effect-without-foreground)
        .invalid > &
            effect(invalid-effect-without-foreground)

// text-field
.unity-base-text-field
    &__input
        text-field-input()
    &__input .unity-text-element
        text-field-input--text()

// popup-field
.unity-base-popup-field
    &__input
        popup-field-input()
    &__input .unity-text-element
        popup-field-input--text()
    &__input &__arrow
        popup-field-input--arrow()

// slider-field
.unity-base-slider
    &__input
        slider-field-input()
    &__input #unity-drag-container
        slider-field-input--container()
    &__input #unity-tracker
        slider-field-input--tracker()
    &__input #unity-dragger
        slider-field-input--dragger()

// toggle-field
.unity-toggle
    &__input
        toggle-field-input()
    &__input #unity-checkmark
        toggle-field-input--checkmark(false)
    &__input:checked #unity-checkmark
        toggle-field-input--checkmark(true)

// scroll-view
.unity-scroll-view
    scroll-view()
    #unity-content-and-vertical-scroll-container
        scroll-view--container()
    #unity-content-viewport
        scroll-view--viewport()
    #unity-content-container
        scroll-view--content()

// scroller--horizontal
.unity-scroller--horizontal
    horizontal-scroller()
    #unity-low-button
        horizontal-scroller--low-button()
    #unity-high-button
        horizontal-scroller--high-button()
    .unity-base-slider
        horizontal-scroller--slider-field()
        .unity-base-slider__input
            horizontal-scroller--slider-field-input()
        #unity-drag-container
            horizontal-scroller--slider-field-input--container()
        #unity-tracker
            horizontal-scroller--slider-field-input--tracker()
        #unity-dragger
            horizontal-scroller--slider-field-input--dragger()
    .unity-base-slider:focus
        #unity-dragger
            effect(focus-effect)

// scroller--vertical
.unity-scroller--vertical
    vertical-scroller()
    #unity-low-button
        vertical-scroller--low-button()
    #unity-high-button
        vertical-scroller--high-button()
    .unity-base-slider
        vertical-scroller--slider-field()
        .unity-base-slider__input
            vertical-scroller--slider-field-input()
        #unity-drag-container
            vertical-scroller--slider-field-input--container()
        #unity-tracker
            vertical-scroller--slider-field-input--tracker()
        #unity-dragger
            vertical-scroller--slider-field-input--dragger()
    .unity-base-slider:focus
        #unity-dragger
            effect(focus-effect)

// dropdown
.unity-base-dropdown
    view-background(rgba(0, 0, 0, 0.25), null, null, null)
    layout-position(absolute, null, null, null, null)
    &__container-outer
        dropdown-view()
    .unity-scroll-view
        dropdown-view--scroll-view()
    #unity-content-and-vertical-scroll-container
        dropdown-view--scroll-view--container()
    #unity-content-viewport
        dropdown-view--scroll-view--viewport()
    #unity-content-container
        dropdown-view--scroll-view--content()
    &__item
        dropdown-view--scroll-view--item()
    &__item:hover
        effect(hover-effect)
    &__item &__checkmark
        dropdown-view--scroll-view--item-checkmark(false)
    &__item:checked &__checkmark
        dropdown-view--scroll-view--item-checkmark(true)
    &__item &__label
        dropdown-view--scroll-view--item-text()