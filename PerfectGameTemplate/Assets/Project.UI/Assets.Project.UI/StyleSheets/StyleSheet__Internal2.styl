@import "StyleSheet__Internal"

// create-view-skin
create-view-skin(color, background, border)
    color            = get-theme-color(color)
    background-color = get-theme-background-color(background[0])
    background-image = get-theme-background-image(background[1])
    border-color     = get-theme-border-color(border[0])
    border-radius    = get-theme-border-radius(border[1])
    create-view(color, null, null, background-color, background-image, border-color, border-radius)
// create-layout-skin
create-layout-skin(position, size, box)
    create-layout(position, size[0], size[1], box[0], box[1], box[2])

// add-skins
add-skins(effect, view, layout, objects...)
    add-view-skin(view[0])
    add-view-skin(view[1])
    add-layout-skin(layout)
    add-style(objects)

// add-skins-gradient
add-skins-gradient(effect, view, light-view, dark-view, layout, objects...)
    add-skins(effect, view, layout, objects)
    for i in 0..10
        alpha  = i / 10
        alpha2 = (alpha+3)/4
        &.light-{i}
            skin = get-view-skin(light-view)
            skin.background-color    = alpha(skin.background-color,    alpha(skin.background-color   ) * alpha )
            skin.border-color        = alpha(skin.border-color,        alpha(skin.border-color       ) * alpha2) if has(skin, 'border-color'       )
            skin.border-left-color   = alpha(skin.border-left-color,   alpha(skin.border-left-color  ) * alpha2) if has(skin, 'border-left-color'  )
            skin.border-right-color  = alpha(skin.border-right-color,  alpha(skin.border-right-color ) * alpha2) if has(skin, 'border-right-color' )
            skin.border-top-color    = alpha(skin.border-top-color,    alpha(skin.border-top-color   ) * alpha2) if has(skin, 'border-top-color'   )
            skin.border-bottom-color = alpha(skin.border-bottom-color, alpha(skin.border-bottom-color) * alpha2) if has(skin, 'border-bottom-color')
            add-skins(effect, skin, null)
        &.dark-{i}
            skin = get-view-skin(dark-view)
            skin.background-color    = alpha(skin.background-color,    alpha(skin.background-color   ) * alpha )
            skin.border-color        = alpha(skin.border-color,        alpha(skin.border-color       ) * alpha2) if has(skin, 'border-color'       )
            skin.border-left-color   = alpha(skin.border-left-color,   alpha(skin.border-left-color  ) * alpha2) if has(skin, 'border-left-color'  )
            skin.border-right-color  = alpha(skin.border-right-color,  alpha(skin.border-right-color ) * alpha2) if has(skin, 'border-right-color' )
            skin.border-top-color    = alpha(skin.border-top-color,    alpha(skin.border-top-color   ) * alpha2) if has(skin, 'border-top-color'   )
            skin.border-bottom-color = alpha(skin.border-bottom-color, alpha(skin.border-bottom-color) * alpha2) if has(skin, 'border-bottom-color')
            add-skins(effect, skin, null)

// add-view-skin
add-view-skin(view)
    if view != null
        view = get-view-skin(view) if typeof(view) != 'object'
        add-style(view)
// add-layout-skin
add-layout-skin(layout)
    if layout != null
        layout = get-layout-skin(layout) if typeof(layout) != 'object'
        add-style(layout)

// get-view-skin
get-view-skin(view)
    if view != null
        view = views[get-string(view)] or error('Views has no view: ' + get-string(view))
        return clone(view)
    null
// get-layout-skin
get-layout-skin(layout)
    if layout != null
        layout = layouts[get-string(layout)] or error('Layouts has no layout: ' + get-string(layout))
        return clone(layout)
    null

// get-theme-value
get-theme-color(key)
    if key != null
        return get(theme.color, key) if has(theme.color, key)
        error('Theme has no color: ' + get-string(key))
    null
get-theme-background-color(key)
    if key != null
        return get(theme.background-color, key) if has(theme.background-color, key)
        return get(theme.color,            key) if has(theme.color,            key)
        error('Theme has no background-color: ' + get-string(key))
    null
get-theme-background-image(key)
    if key != null
        return get(theme.background-image, key) if has(theme.background-image, key)                              
        error('Theme has no background-image: ' + get-string(key))
    null
get-theme-border-color(key)
    if key != null
        return get(theme.border-color, key) if has(theme.border-color, key)
        return get(theme.color,        key) if has(theme.color,        key)
        error('Theme has no border-color: ' + get-string(key))
    null
get-theme-border-radius(key)
    if key != null
        return get(theme.border-radius, key) if has(theme.border-radius, key)                              
        error('Theme has no border-radius: ' + get-string(key))
    null

// add-view
add-view(color = null, font = null, text = null, background-color = null, background-image = null, border-color = null, border-radius = null)
    add-style create-view(color, font, text, background-color, background-image, border-color, border-radius)
// add-view/foreground
add-view-foreground(color, font, text)
    add-style create-foreground(color, font, text)
// add-view/background
add-view-background(background-color, background-image)
    add-style create-background(background-color, background-image)
// add-view/border
add-view-border(border-color, border-radius)
    add-style create-border(border-color, border-radius)

// add-layout
add-layout(position = null, width = null, height = null, margin = null, border = null, padding = null)
    add-style create-layout(position, width, height, margin, border, padding)
// add-layout/position
add-layout-position(position, left = null, right = null, top = null, bottom = null)
    add-style create-position(position, left, right, top, bottom)
// add-layout/size
add-layout-size(width, height)
    add-style create-size(width, height)
// add-layout/box
add-layout-box(margin, border, padding)
    add-style create-box(margin, border, padding)

// add-flex
add-flex(flex-grow, flex-shrink, flex-basis, align-self)
    add-style create-flex(flex-grow, flex-shrink, flex-basis, align-self)
add-flex2(flex-direction, justify-content, align-items)
    add-style create-flex2(flex-direction, justify-content, align-items)
