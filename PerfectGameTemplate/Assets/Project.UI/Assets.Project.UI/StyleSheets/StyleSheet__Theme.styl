@import "StyleSheet__Internal"

// theme
theme = {
    color: {
        light:                         hsla(  0deg,   0%,  90%, 1.00),
        dark:                          hsla(  0deg,   0%,  10%, 1.00),
        focus-effect:                  hsla(200deg,  80%,  40%, 1.00),
        invalid-effect:                hsla( 20deg,  80%,  40%, 1.00),
    },
    background-color: {
    },
    background-image: {
    },
    border-color: {
    },
    border-radius: {
    }
}

// theme
theme0 = {
    color: {
    },
    background-color: {
        // card
        card:                          hsla(240deg,   5%,  25%, 0.75),
        card-header:                   hsla( 60deg,   5%,  65%, 0.75),
        card-content:                  hsla(  0deg,   0%,   0%, 0.00),
        card-footer:                   hsla(240deg,  10%,  10%, 0.75),
        // card
        dialog-card:                   hsla(240deg,   5%,  40%, 0.95),
        dialog-card-header:            hsla( 60deg,   5%,  65%, 0.75),
        dialog-card-header--info:      hsla(220deg,  70%,  65%, 0.75),
        dialog-card-header--warning:   hsla( 40deg,  70%,  65%, 0.75),
        dialog-card-header--error:     hsla( 10deg,  70%,  65%, 0.75),
        dialog-card-content:           hsla(  0deg,   0%,   0%, 0.00),
        dialog-card-footer:            hsla(240deg,  10%,  10%, 0.75),
        // view
        view:                          hsla(  0deg,   0%,   0%, 0.00),
        view--light:                   hsla( 30deg,   5%,  80%, 1.00),
        view--dark:                    hsla(200deg,   5%,  20%, 1.00),
        // box
        box:                           hsla(  0deg,   0%,   0%, 0.00),
        box--light:                    hsla( 30deg,  15%,  80%, 1.00),
        box--dark:                     hsla(200deg,  15%,  20%, 1.00),
    },
    background-image: {
        // card
        card:                          create-background-image(null, null, null),
        card-header:                   create-background-image(null, null, null),
        card-content:                  create-background-image(null, null, null),
        card-footer:                   create-background-image(null, null, null),
        // card
        dialog-card:                   create-background-image(null, null, null),
        dialog-card-header:            create-background-image(null, null, null),
        dialog-card-header--info:      create-background-image(null, null, null),
        dialog-card-header--warning:   create-background-image(null, null, null),
        dialog-card-header--error:     create-background-image(null, null, null),
        dialog-card-content:           create-background-image(null, null, null),
        dialog-card-footer:            create-background-image(null, null, null),
        // view
        view:                          create-background-image(null, null, null),
        view--light:                   create-background-image(null, null, null),
        view--dark:                    create-background-image(null, null, null),
        // box
        box:                           create-background-image(null, null, null), 
        box--light:                    create-background-image(null, null, null),
        box--dark:                     create-background-image(null, null, null),
    },
    border-color: {
        // card
        card:                          hsla( 35deg, 100%,  30%, 1.00),
        card-header:                   hsla( 35deg, 100%,  30%, 1.00),
        card-content:                  hsla(  0deg,   0%,   0%, 0.00),
        card-footer:                   hsla( 35deg, 100%,  30%, 1.00),
        // card
        dialog-card:                   hsla( 35deg, 100%,  30%, 1.00),
        dialog-card-header:            hsla( 35deg, 100%,  30%, 1.00),
        dialog-card-content:           hsla(  0deg,   0%,   0%, 0.00),
        dialog-card-footer:            hsla( 35deg, 100%,  30%, 1.00),
        // view
        view:                          hsla(  0deg,   0%,   0%, 0.00),
        view--light:                   hsla( 35deg, 100%,  30%, 1.00),
        view--dark:                    hsla( 35deg, 100%,  30%, 1.00),
        // box
        box:                           hsla(  0deg,   0%,   0%, 0.00),
        box--light:                    hsla( 30deg, 100%,  30%, 1.00),
        box--dark:                     hsla( 30deg, 100%,  30%, 1.00),
    },
    border-radius: {
        // card
        card:                          6px,
        card-header:                   6px 6px 0px 0px,
        card-content:                  6px,
        card-footer:                   0px 0px 6px 6px,
        // card
        dialog-card:                   6px,
        dialog-card-header:            6px 6px 0px 0px,
        dialog-card-content:           6px,
        dialog-card-footer:            0px 0px 6px 6px,
        // view
        view:                          4px,
        // box
        box:                           4px,
    }
}

// theme
theme1 = {
    color: {
    },
    background-color: {
        // element
        element:                       hsla(  0deg,   0%,   0%, 0.00),
        element--light:                hsla( 30deg,  30%,  90%, 0.50),
        element--dark:                 hsla(200deg,  30%,  10%, 0.50),
        // element
        dropdown-element:              hsla(200deg,  30%,  10%, 0.80),
        dropdown-item-element:         hsla(  0deg,   0%,   0%, 0.00),
        dropdown-item-element--hover:  hsla( 40deg,  60%,  40%, 1.00),
        // component
        component:                     hsla(  0deg,   0%,   0%, 0.00),
        component--light:              hsla( 30deg,  30%,  90%, 0.80),
        component--dark:               hsla(200deg,  30%,  10%, 0.80),
    },
    background-image: {
        // element
        element:                       create-background-image(null, null, null),
        element--light:                create-background-image(null, null, null),
        element--dark:                 create-background-image(null, null, null),
        // element
        dropdown-element:              create-background-image(null, null, null),
        dropdown-item-element:         create-background-image(null, null, null),
        // component
        component:                     create-background-image(null, null, null),
        component--light:              create-background-image(null, null, null),
        component--dark:               create-background-image(null, null, null),
        // icon
        left-arrow-icon--dark:         create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Left.png',    hsla(200deg,  30%,  10%, 1.00), null),
        right-arrow-icon--dark:        create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Right.png',   hsla(200deg,  30%,  10%, 1.00), null),
        up-arrow-icon--dark:           create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Up.png',      hsla(200deg,  30%,  10%, 1.00), null),
        down-arrow-icon--dark:         create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Down.png',    hsla(200deg,  30%,  10%, 1.00), null),
        dropdown-arrow-icon--dark:     create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/DropdownArrow.png', hsla(200deg,  30%,  10%, 1.00), null),
        checkmark-icon--dark:          create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Check.png',         hsla(200deg,  30%,  10%, 1.00), null),
        // icon
        left-arrow-icon--light:        create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Left.png',    hsla( 30deg,  30%,  90%, 1.00), null),
        right-arrow-icon--light:       create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Right.png',   hsla( 30deg,  30%,  90%, 1.00), null),
        up-arrow-icon--light:          create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Up.png',      hsla( 30deg,  30%,  90%, 1.00), null),
        down-arrow-icon--light:        create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Down.png',    hsla( 30deg,  30%,  90%, 1.00), null),
        dropdown-arrow-icon--light:    create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/DropdownArrow.png', hsla( 30deg,  30%,  90%, 1.00), null),
        checkmark-icon--light:         create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Check.png',         hsla( 30deg,  30%,  90%, 1.00), null),
    },
    border-color: {
        // element
        element:                       hsla(  0deg,   0%,   0%, 0.00),
        element--light:                hsla( 45deg, 100%,  15%, 1.00),
        element--dark:                 hsla( 45deg, 100%,  30%, 1.00),
        // element
        dropdown-element:              hsla( 45deg, 100%,  30%, 1.00),
        dropdown-item-element:         hsla(  0deg,   0%,   0%, 0.00),
        dropdown-item-element--hover:  hsla( 40deg, 100%,  40%, 1.00),
        // component
        component:                     hsla(  0deg,   0%,   0%, 0.00),
        component--light:              hsla( 45deg, 100%,  30%, 1.00),
        component--dark:               hsla( 45deg, 100%,  30%, 1.00),
    },
    border-radius: {
        // element
        element:                       4px,
        // component
        component:                     2px,
    }
}

// theme
theme = {
    color:            merge(theme.color,            theme0.color,            theme1.color           ),
    background-color: merge(theme.background-color, theme0.background-color, theme1.background-color),
    background-image: merge(theme.background-image, theme0.background-image, theme1.background-image),
    border-color:     merge(theme.border-color,     theme0.border-color,     theme1.border-color    ),
    border-radius:    merge(theme.border-radius,    theme0.border-radius,    theme1.border-radius   ),
}

// create-view-skin
create-view-skin(color, background, border)
    color            = get-theme-color(color)
    background-color = get-theme-background-color(background[0])
    background-image = get-theme-background-image(background[1])
    border-color     = get-theme-border-color(border[0])
    border-radius    = get-theme-border-radius(border[1])
    create-view color, null, null, background-color, background-image, border-color, border-radius

// create-layout-skin
create-layout-skin(position, size, margin, border, padding)
    create-layout(position, size[0], size[1], margin, border, padding)

// get-theme-value
get-theme-color(key)
    if key != null
        return get(theme.color, key) if has(theme.color, key)
        error('Theme has no color: ' + get-string(key))
    null
get-theme-background-color(key)
    if key != null
        return get(theme.background-color, key) if has(theme.background-color, key)
        return get(theme.color,            key) if has(theme.color,            key)
        error('Theme has no background-color: ' + get-string(key))
    null
get-theme-background-image(key)
    if key != null
        return get(theme.background-image, key) if has(theme.background-image, key)                              
        error('Theme has no background-image: ' + get-string(key))
    null
get-theme-border-color(key)
    if key != null
        return get(theme.border-color, key) if has(theme.border-color, key)
        return get(theme.color,        key) if has(theme.color,        key)
        error('Theme has no border-color: ' + get-string(key))
    null
get-theme-border-radius(key)
    if key != null
        return get(theme.border-radius, key) if has(theme.border-radius, key)                              
        error('Theme has no border-radius: ' + get-string(key))
    null

// add-skin
add-skin(effect, name)
    if effect == null
        add-style get-skin(name)
// add-skin
add-skin-light(effect, name)
    if effect == null
        for i in 0..100
            alpha  = i / 100
            alpha2 = (alpha+3)/4
            &.light-{i}
                skin = get-skin(name)
                skin.background-color    = alpha(skin.background-color,    alpha(skin.background-color   ) * alpha )
                skin.border-color        = alpha(skin.border-color,        alpha(skin.border-color       ) * alpha2) if has(skin, 'border-color'       )
                skin.border-left-color   = alpha(skin.border-left-color,   alpha(skin.border-left-color  ) * alpha2) if has(skin, 'border-left-color'  )
                skin.border-right-color  = alpha(skin.border-right-color,  alpha(skin.border-right-color ) * alpha2) if has(skin, 'border-right-color' )
                skin.border-top-color    = alpha(skin.border-top-color,    alpha(skin.border-top-color   ) * alpha2) if has(skin, 'border-top-color'   )
                skin.border-bottom-color = alpha(skin.border-bottom-color, alpha(skin.border-bottom-color) * alpha2) if has(skin, 'border-bottom-color')
                add-style skin
// add-skin
add-skin-dark(effect, name)
    if effect == null
        for i in 0..100
            alpha  = i / 100
            alpha2 = (alpha+3)/4
            &.dark-{i}
                skin = get-skin(name)
                skin.background-color    = alpha(skin.background-color,    alpha(skin.background-color   ) * alpha )
                skin.border-color        = alpha(skin.border-color,        alpha(skin.border-color       ) * alpha2) if has(skin, 'border-color'       )
                skin.border-left-color   = alpha(skin.border-left-color,   alpha(skin.border-left-color  ) * alpha2) if has(skin, 'border-left-color'  )
                skin.border-right-color  = alpha(skin.border-right-color,  alpha(skin.border-right-color ) * alpha2) if has(skin, 'border-right-color' )
                skin.border-top-color    = alpha(skin.border-top-color,    alpha(skin.border-top-color   ) * alpha2) if has(skin, 'border-top-color'   )
                skin.border-bottom-color = alpha(skin.border-bottom-color, alpha(skin.border-bottom-color) * alpha2) if has(skin, 'border-bottom-color')
                add-style skin
// add-misc
add-misc(effect, name, objects...)
    if effect == null
        add-style get-misc(name), objects

// get-skin
get-skin(name)
    if name != null
        name = 'skin--' + get-string(name)
        if name is defined
            return clone(lookup(name))
        error('Skin is not found: ' + name)
    null
// get-misc
get-misc(name)
    if name != null
        name = 'misc--' + get-string(name)
        if name is defined
            return clone(lookup(name))
        error('Skin (misc) is not found: ' + name)
    null
