@import "StyleSheet__Internal"

// common
color--light          = hsla(  0deg,   0%,  90%, 1.00)
color--dark           = hsla(  0deg,   0%,  10%, 1.00)
color--focus-effect   = hsla(200deg,  80%,  40%, 1.00)
color--invalid-effect = hsla( 20deg,  80%,  40%, 1.00)

// card
background-color--card         = hsla(240deg,   5%,  25%, 0.75)
background-color--card-header  = hsla( 60deg,   5%,  65%, 0.75)
background-color--card-content = hsla(  0deg,   0%,   0%, 0.00)
background-color--card-footer  = hsla(240deg,  10%,  10%, 0.75)
// card
background-image--card         = create-background-image(null, null, null)
background-image--card-header  = create-background-image(null, null, null)
background-image--card-content = create-background-image(null, null, null)
background-image--card-footer  = create-background-image(null, null, null)
// card
border-color------card         = hsla( 35deg, 100%,  30%, 1.00)
border-color------card-header  = hsla( 35deg, 100%,  30%, 1.00)
border-color------card-content = hsla(  0deg,   0%,   0%, 0.00)
border-color------card-footer  = hsla( 35deg, 100%,  30%, 1.00)
// card
border-radius-----card         = 6px
border-radius-----card-header  = 6px 6px 0px 0px
border-radius-----card-content = 6px
border-radius-----card-footer  = 0px 0px 6px 6px

// card
background-color--dialog-card                 = hsla(240deg,   5%,  40%, 0.95)
background-color--dialog-card-header          = hsla( 60deg,   5%,  65%, 0.75)
background-color--dialog-card-header--info    = hsla(220deg,  70%,  65%, 0.75)
background-color--dialog-card-header--warning = hsla( 40deg,  70%,  65%, 0.75)
background-color--dialog-card-header--error   = hsla( 10deg,  70%,  65%, 0.75)
background-color--dialog-card-content         = hsla(  0deg,   0%,   0%, 0.00)
background-color--dialog-card-footer          = hsla(240deg,  10%,  10%, 0.75)
// card
background-image--dialog-card                 = create-background-image(null, null, null)
background-image--dialog-card-header          = create-background-image(null, null, null)
background-image--dialog-card-header--info    = create-background-image(null, null, null)
background-image--dialog-card-header--warning = create-background-image(null, null, null)
background-image--dialog-card-header--error   = create-background-image(null, null, null)
background-image--dialog-card-content         = create-background-image(null, null, null)
background-image--dialog-card-footer          = create-background-image(null, null, null)
// card
border-color------dialog-card                 = hsla( 35deg, 100%,  30%, 1.00)
border-color------dialog-card-header          = hsla( 35deg, 100%,  30%, 1.00)
border-color------dialog-card-content         = hsla(  0deg,   0%,   0%, 0.00)
border-color------dialog-card-footer          = hsla( 35deg, 100%,  30%, 1.00)
// card
border-radius-----dialog-card                 = 6px
border-radius-----dialog-card-header          = 6px 6px 0px 0px
border-radius-----dialog-card-content         = 6px
border-radius-----dialog-card-footer          = 0px 0px 6px 6px

// view
background-color--view        = hsla(  0deg,   0%,   0%, 0.00)
background-color--view--light = hsla( 30deg,   3%,  60%, 1.00)
background-color--view--dark  = hsla(200deg,   3%,  40%, 1.00)
// view
background-image--view        = create-background-image(null, null, null)
background-image--view--light = create-background-image(null, null, null)
background-image--view--dark  = create-background-image(null, null, null)
// view
border-color------view        = hsla(  0deg,   0%,   0%, 0.00)
border-color------view--light = hsla( 35deg, 100%,  30%, 1.00)
border-color------view--dark  = hsla( 35deg, 100%,  30%, 1.00)
// view
border-radius-----view        = 4px

// box
background-color--box        = hsla(  0deg,   0%,   0%, 0.00)
background-color--box--light = hsla( 30deg,  15%,  80%, 1.00)
background-color--box--dark  = hsla(200deg,  15%,  20%, 1.00)
// box
background-image--box        = create-background-image(null, null, null)
background-image--box--light = create-background-image(null, null, null)
background-image--box--dark  = create-background-image(null, null, null)
// box
border-color------box        = hsla(  0deg,   0%,   0%, 0.00)
border-color------box--light = hsla( 30deg, 100%,  30%, 1.00)
border-color------box--dark  = hsla( 30deg, 100%,  30%, 1.00)
// box
border-radius-----box        = 4px

// element
background-color--element        = hsla(  0deg,   0%,   0%, 0.00)
background-color--element--light = hsla( 30deg,  30%,  90%, 0.50)
background-color--element--dark  = hsla(200deg,  30%,  10%, 0.50)
// element
background-image--element        = create-background-image(null, null, null)
background-image--element--light = create-background-image(null, null, null)
background-image--element--dark  = create-background-image(null, null, null)
// element
border-color------element        = hsla(  0deg,   0%,   0%, 0.00)
border-color------element--light = hsla( 45deg, 100%,  15%, 1.00)
border-color------element--dark  = hsla( 45deg, 100%,  30%, 1.00)
// element
border-radius-----element        = 4px

// dropdown-element
background-color--dropdown-element = hsla(200deg,  10%,  20%, 1.00)
border-color------dropdown-element = hsla( 45deg, 100%,  30%, 1.00)

// dropdown-element-item
background-color--dropdown-item-element        = hsla(  0deg,   0%,   0%, 0.00)
background-color--dropdown-item-element--hover = hsla( 40deg,  60%,  40%, 1.00)
// dropdown-element-item
border-color------dropdown-item-element        = hsla(200deg,  10%,  25%, 1.00)
border-color------dropdown-item-element--hover = hsla( 40deg,  60%,  50%, 1.00)

// component
background-color--component        = hsla(  0deg,   0%,   0%, 0.00)
background-color--component--light = hsla( 30deg,  30%,  90%, 0.80)
background-color--component--dark  = hsla(200deg,  30%,  10%, 0.80)
// component
background-image--component        = create-background-image(null, null, null)
background-image--component--light = create-background-image(null, null, null)
background-image--component--dark  = create-background-image(null, null, null)
// component
border-color------component        = hsla(  0deg,   0%,   0%, 0.00)
border-color------component--light = hsla( 45deg, 100%,  30%, 1.00)
border-color------component--dark  = hsla( 45deg, 100%,  30%, 1.00)
// component
border-radius-----component        = 2px

// icon
background-image--left-arrow-icon--dark      = create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Left.png',    hsla(200deg,  30%,  10%, 1.00), null)
background-image--right-arrow-icon--dark     = create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Right.png',   hsla(200deg,  30%,  10%, 1.00), null)
background-image--up-arrow-icon--dark        = create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Up.png',      hsla(200deg,  30%,  10%, 1.00), null)
background-image--down-arrow-icon--dark      = create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Down.png',    hsla(200deg,  30%,  10%, 1.00), null)
background-image--dropdown-arrow-icon--dark  = create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/DropdownArrow.png', hsla(200deg,  30%,  10%, 1.00), null)
background-image--checkmark-icon--dark       = create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Check.png',         hsla(200deg,  30%,  10%, 1.00), null)

// icon
background-image--left-arrow-icon--light     = create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Left.png',    hsla( 30deg,  30%,  90%, 1.00), null)
background-image--right-arrow-icon--light    = create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Right.png',   hsla( 30deg,  30%,  90%, 1.00), null)
background-image--up-arrow-icon--light       = create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Up.png',      hsla( 30deg,  30%,  90%, 1.00), null)
background-image--down-arrow-icon--light     = create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Arrow_Down.png',    hsla( 30deg,  30%,  90%, 1.00), null)
background-image--dropdown-arrow-icon--light = create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/DropdownArrow.png', hsla( 30deg,  30%,  90%, 1.00), null)
background-image--checkmark-icon--light      = create-background-image('project://database/Assets/Project.UI/Assets.Project.UI/Images/Check.png',         hsla( 30deg,  30%,  90%, 1.00), null)

// create-view-skin
create-view-skin(color, background, border)
    color            = get-theme-color(color)
    background-color = get-theme-background-color(background[0])
    background-image = get-theme-background-image(background[1])
    border-color     = get-theme-border-color(border[0])
    border-radius    = get-theme-border-radius(border[1])
    create-view color, null, null, background-color, background-image, border-color, border-radius

// create-layout-skin
create-layout-skin(position, size, margin, border, padding)
    create-layout(position, size[0], size[1], margin, border, padding)

// get-theme-value
get-theme-color(key)
    key = get-string(key)
    if key != null
        return get(null, 'color--' + key) if has(null, 'color--' + key)
        error('Color is not found: ' + key)
    null
get-theme-background-color(key)
    key = get-string(key)
    if key != null
        return get(null, 'background-color--' + key) if has(null, 'background-color--' + key)
        return get(null, 'color--'            + key) if has(null, 'color--'            + key)
        error('Background-color is not found: ' + key)
    null
get-theme-background-image(key)
    key = get-string(key)
    if key != null
        return get(null, 'background-image--' + key) if has(null, 'background-image--' + key)
        error('Background-image is not found: ' + key)
    null
get-theme-border-color(key)
    key = get-string(key)
    if key != null
        return get(null, 'border-color------' + key) if has(null, 'border-color------' + key)
        return get(null, 'color--'        + key) if has(null, 'color--'        + key)
        error('Border-color is not found: ' + key)
    null
get-theme-border-radius(key)
    key = get-string(key)
    if key != null
        return get(null, 'border-radius-----' + key) if has(null, 'border-radius-----' + key)
        error('Border-radius is not found: ' + key)
    null

// add-skin
add-skin(effect, name)
    if effect == null
        add-style get-skin(name)
// add-skin
add-skin-light(effect, name)
    if effect == null
        for i in 0..100
            alpha  = i / 100
            alpha2 = (alpha+3)/4
            &.light-{i}
                skin = get-skin(name)
                skin.background-color    = alpha(skin.background-color,    alpha(skin.background-color   ) * alpha )
                skin.border-color        = alpha(skin.border-color,        alpha(skin.border-color       ) * alpha2) if has(skin, 'border-color'       )
                skin.border-left-color   = alpha(skin.border-left-color,   alpha(skin.border-left-color  ) * alpha2) if has(skin, 'border-left-color'  )
                skin.border-right-color  = alpha(skin.border-right-color,  alpha(skin.border-right-color ) * alpha2) if has(skin, 'border-right-color' )
                skin.border-top-color    = alpha(skin.border-top-color,    alpha(skin.border-top-color   ) * alpha2) if has(skin, 'border-top-color'   )
                skin.border-bottom-color = alpha(skin.border-bottom-color, alpha(skin.border-bottom-color) * alpha2) if has(skin, 'border-bottom-color')
                add-style skin
// add-skin
add-skin-dark(effect, name)
    if effect == null
        for i in 0..100
            alpha  = i / 100
            alpha2 = (alpha+3)/4
            &.dark-{i}
                skin = get-skin(name)
                skin.background-color    = alpha(skin.background-color,    alpha(skin.background-color   ) * alpha )
                skin.border-color        = alpha(skin.border-color,        alpha(skin.border-color       ) * alpha2) if has(skin, 'border-color'       )
                skin.border-left-color   = alpha(skin.border-left-color,   alpha(skin.border-left-color  ) * alpha2) if has(skin, 'border-left-color'  )
                skin.border-right-color  = alpha(skin.border-right-color,  alpha(skin.border-right-color ) * alpha2) if has(skin, 'border-right-color' )
                skin.border-top-color    = alpha(skin.border-top-color,    alpha(skin.border-top-color   ) * alpha2) if has(skin, 'border-top-color'   )
                skin.border-bottom-color = alpha(skin.border-bottom-color, alpha(skin.border-bottom-color) * alpha2) if has(skin, 'border-bottom-color')
                add-style skin
// add-misc
add-misc(effect, name, objects...)
    if effect == null
        add-style get-misc(name), objects

// get-skin
get-skin(name)
    if name != null
        name = 'skin--' + get-string(name)
        if name is defined
            return clone(lookup(name))
        error('Skin is not found: ' + name)
    null
// get-misc
get-misc(name)
    if name != null
        name = 'misc--' + get-string(name)
        if name is defined
            return clone(lookup(name))
        error('Skin (misc) is not found: ' + name)
    null
