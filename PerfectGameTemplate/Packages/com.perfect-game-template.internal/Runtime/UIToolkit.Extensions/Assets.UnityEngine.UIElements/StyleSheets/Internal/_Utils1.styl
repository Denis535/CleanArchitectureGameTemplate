// add-view
add-font(url, size, style)
    add-property-internal 'font-url'            url
    add-property-internal 'font-definition-url' url
    add-property-internal 'font-size'           size
    add-property-internal 'font-style'          style
add-text(align, outline, shadow)
    add-property-internal 'text-align'          align
    add-property-internal 'text-outline'        outline
    add-property-internal 'text-shadow'         shadow

// add-view
add-view(color = null, background-color = null, background-image = null, border-color = null, border-radius = null)
    add-view-foreground                                   color
    add-view-background                                   background-color background-image
    add-view-border                                       border-color border-radius
add-view-foreground(color)
    color =                                               get-theme-value('color', color)
    add-property-internal 'color'                         color
add-view-background(background-color, background-image)
    background-color =                                    get-theme-value('background-color', background-color)
    background-image =                                    get-theme-value('background-image', background-image) if typeof(background-image) != 'object'
    add-property-internal 'background-color'              background-color
    add-property-internal 'background-image-url'          background-image.url          if background-image != null
    add-property-internal 'background-image-color'        background-image.color        if background-image != null
    add-property-internal 'background-image-scale-mode'   background-image.scale-mode   if background-image != null
    add-property-internal 'background-image-slice-left'   background-image.slice-left   if background-image != null
    add-property-internal 'background-image-slice-right'  background-image.slice-right  if background-image != null
    add-property-internal 'background-image-slice-top'    background-image.slice-top    if background-image != null
    add-property-internal 'background-image-slice-bottom' background-image.slice-bottom if background-image != null
    add-property-internal 'background-image-slice-scale'  background-image.slice-scale  if background-image != null
add-view-border(border-color, border-radius)
    border-color  =                                       get-theme-value('border-color',  border-color )
    border-radius =                                       get-theme-value('border-radius', border-radius)
    add-property-internal 'border-left-color'             border-color[0]
    add-property-internal 'border-right-color'            border-color[1] or border-color[0]
    add-property-internal 'border-top-color'              border-color[2] or border-color[0]
    add-property-internal 'border-bottom-color'           border-color[3] or border-color[0]
    add-property-internal 'border-top-left-radius'        border-radius[0]
    add-property-internal 'border-top-right-radius'       border-radius[1] or border-radius[0]
    add-property-internal 'border-bottom-left-radius'     border-radius[2] or border-radius[0]
    add-property-internal 'border-bottom-right-radius'    border-radius[3] or border-radius[0]

// add-layout
add-layout(position = null, width = null, height = null, margin = null, border = null, padding = null)
    add-layout-position                         position, null, null, null, null
    add-layout-size                             width, height
    add-layout-box                              margin, border, padding
add-layout-position(position, left = null, right = null, top = null, bottom = null)
    add-property-internal 'position'            position[0]
    add-property-internal 'left'                left   or position[1]
    add-property-internal 'right'               right  or position[2]
    add-property-internal 'top'                 top    or position[3]
    add-property-internal 'bottom'              bottom or position[4]
add-layout-size(width, height)
    add-property-internal 'width'               width[0]
    add-property-internal 'min-width'           width[1]
    add-property-internal 'max-width'           width[2]
    add-property-internal 'height'              height[0]
    add-property-internal 'min-height'          height[1]
    add-property-internal 'max-height'          height[2]
add-layout-box(margin, border, padding)
    add-property-internal 'margin-left'         margin[0]
    add-property-internal 'margin-right'        margin[1] or margin[0]
    add-property-internal 'margin-top'          margin[2] or margin[0]
    add-property-internal 'margin-bottom'       margin[3] or margin[0]
    add-property-internal 'border-left-width'   border[0]
    add-property-internal 'border-right-width'  border[1] or border[0]
    add-property-internal 'border-top-width'    border[2] or border[0]
    add-property-internal 'border-bottom-width' border[3] or border[0]
    add-property-internal 'padding-left'        padding[0]
    add-property-internal 'padding-right'       padding[1] or padding[0]
    add-property-internal 'padding-top'         padding[2] or padding[0]
    add-property-internal 'padding-bottom'      padding[3] or padding[0]

// add-flex
add-flex(flex-grow = null, flex-shrink = null, flex-basis = null, align-self = null)
    add-property-internal 'flex-grow'       flex-grow
    add-property-internal 'flex-shrink'     flex-shrink
    add-property-internal 'flex-basis'      flex-basis
    add-property-internal 'align-self'      align-self
add-flex2(flex-direction = null, justify-content = null, align-items = null)
    add-property-internal 'flex-direction'  flex-direction
    add-property-internal 'justify-content' justify-content
    add-property-internal 'align-items'     align-items

// utils
img(url, color, scale-mode, slice-left = null, slice-right = null, slice-top = null, slice-bottom = null, slice-scale = null)
    return {
        url:          url,
        color:        color,
        scale-mode:   scale-mode,
        slice-left:   slice-left,
        slice-right:  slice-right,
        slice-top:    slice-top,
        slice-bottom: slice-bottom,
        slice-scale:  slice-scale,
    }

// add-property-internal
add-property-internal(property, value)
    property = get-native-property(property)
    property = get-unity-property(property)
    if value != null
        // todo: does this support addressables?
        value = s("url('%s')", unquote(value)) if property == '-unity-font'
        value = s("url('%s')", unquote(value)) if property == '-unity-font-definition'
        value = s("url('%s')", unquote(value)) if property == 'background-image'
        add-property(property, value)

// get-native-property
get-native-property(property)
    // view
    return 'color'                       if property == 'color'
    // view
    return 'font'                        if property == 'font-url'
    return 'font-definition'             if property == 'font-definition-url'
    return 'font-size'                   if property == 'font-size'
    return 'font-style'                  if property == 'font-style'
    // view
    return 'text-align'                  if property == 'text-align'
    return 'text-outline'                if property == 'text-outline'
    return 'text-shadow'                 if property == 'text-shadow'
    // view
    return 'background-color'            if property == 'background-color'
    // view
    return 'background-image'            if property == 'background-image-url'
    return 'background-image-tint-color' if property == 'background-image-color'
    return 'background-scale-mode'       if property == 'background-image-scale-mode'
    return 'slice-left'                  if property == 'background-image-slice-left'
    return 'slice-right'                 if property == 'background-image-slice-right'
    return 'slice-top'                   if property == 'background-image-slice-top'
    return 'slice-bottom'                if property == 'background-image-slice-bottom'
    return 'slice-scale'                 if property == 'background-image-slice-scale'
    // view
    return 'border-left-color'           if property == 'border-left-color'
    return 'border-right-color'          if property == 'border-right-color'
    return 'border-top-color'            if property == 'border-top-color'
    return 'border-bottom-color'         if property == 'border-bottom-color'
    // view
    return 'border-top-left-radius'      if property == 'border-top-left-radius'
    return 'border-top-right-radius'     if property == 'border-top-right-radius'
    return 'border-bottom-left-radius'   if property == 'border-bottom-left-radius'
    return 'border-bottom-right-radius'  if property == 'border-bottom-right-radius'
    // layout
    return 'position'                    if property == 'position'
    return 'left'                        if property == 'left'
    return 'right'                       if property == 'right'
    return 'top'                         if property == 'top'
    return 'bottom'                      if property == 'bottom'
    // layout
    return 'width'                       if property == 'width'
    return 'min-width'                   if property == 'min-width'
    return 'max-width'                   if property == 'max-width'
    // layout
    return 'height'                      if property == 'height'
    return 'min-height'                  if property == 'min-height'
    return 'max-height'                  if property == 'max-height'
    // layout
    return 'margin'                      if property == 'margin'
    return 'margin-left'                 if property == 'margin-left'
    return 'margin-right'                if property == 'margin-right'
    return 'margin-top'                  if property == 'margin-top'
    return 'margin-bottom'               if property == 'margin-bottom'
    // layout
    return 'border'                      if property == 'border'
    return 'border-left-width'           if property == 'border-left-width'
    return 'border-right-width'          if property == 'border-right-width'
    return 'border-top-width'            if property == 'border-top-width'
    return 'border-bottom-width'         if property == 'border-bottom-width'
    // layout
    return 'padding'                     if property == 'padding'
    return 'padding-left'                if property == 'padding-left'
    return 'padding-right'               if property == 'padding-right'
    return 'padding-top'                 if property == 'padding-top'
    return 'padding-bottom'              if property == 'padding-bottom'
    // flex
    return 'flex-grow'                   if property == 'flex-grow'
    return 'flex-shrink'                 if property == 'flex-shrink'
    return 'flex-basis'                  if property == 'flex-basis'
    return 'align-self'                  if property == 'align-self'
    // flex
    return 'flex-direction'              if property == 'flex-direction'
    return 'flex-wrap'                   if property == 'flex-wrap'
    return 'justify-content'             if property == 'justify-content'
    return 'align-items'                 if property == 'align-items'
    return 'align-content'               if property == 'align-content'
    // misc
    property

// get-unity-property
get-unity-property(property)
    // view
    return '-unity-' + property if property == 'overflow-clip-box'
    // view
    return '-unity-' + property if property == 'font'
    return '-unity-' + property if property == 'font-definition'
    return '-unity-' + property if property == 'font-style'
    // view
    return '-unity-' + property if property == 'text-align'
    return '-unity-' + property if property == 'text-outline'
    return '-unity-' + property if property == 'text-outline-width'
    return '-unity-' + property if property == 'text-outline-color'
    return '-unity-' + property if property == 'text-overflow-position'
    return '-unity-' + property if property == 'paragraph-spacing'
    // view
    return '-unity-' + property if property == 'background-image-tint-color'
    return '-unity-' + property if property == 'background-scale-mode'
    return '-unity-' + property if property == 'slice-left'
    return '-unity-' + property if property == 'slice-right'
    return '-unity-' + property if property == 'slice-top'
    return '-unity-' + property if property == 'slice-bottom'
    return '-unity-' + property if property == 'slice-scale'
    // misc
    property

// misc
get-theme-value(section, key, hue = null, saturate = null, desaturate = null, lighten = null, darken = null, alpha = null)
    if key != null and key != none
        return get-theme-value-internal(section, key, hue, saturate, desaturate, lighten, darken, alpha)
    null
get-theme-value-internal(section, key, _hue, _saturate, _desaturate, _lighten, _darken, _alpha)
    value = get-value(get-key('theme', section, key))
    value = hue(value, _hue)               if value != null and _hue        != null
    value = saturate(value, _saturate)     if value != null and _saturate   != null
    value = desaturate(value, _desaturate) if value != null and _desaturate != null
    value = lighten(value, _lighten)       if value != null and _lighten    != null
    value = darken(value, _darken)         if value != null and _darken     != null
    value = alpha(value, _alpha)           if value != null and _alpha      != null
    value

// misc
get-key(key...)
    result =         get-string(key[0])
    result += '--' + get-string(key[1]) if key[1] != null
    result += '--' + get-string(key[2]) if key[2] != null
    result
get-value(key)
    if is-defined(get-string(key))
        return get-definition(get-string(key))
    error('Value is undefined: ' + key)
